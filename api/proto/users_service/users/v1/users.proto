syntax = "proto3";

package users.v1;

import "buf/validate/validate.proto";

service UsersService {
  rpc Create (CreateRequest) returns (CreateResponse) {}
  rpc GetById (GetByIdRequest) returns (GetByIdResponse) {}
  rpc Update (UpdateRequest) returns (UpdateResponse) {}
  rpc Delete (DeleteRequest) returns (DeleteResponse) {}
}

message User {
  int64   id = 1;
  string  username = 2;
  string  email = 3;
  int64   created_at = 4;
  int64   updated_at = 5;
}

message CreateRequest {
  string  username = 1 [(buf.validate.field).string.min_len = 1, (buf.validate.field).string.max_len = 50];
  string  email = 2 [(buf.validate.field).cel = {
    id: "valid_email",
    message: "email must be a valid email",
    expression: "this.isEmail()"
  }];
  string  password = 3 [(buf.validate.field).string.min_len = 1, (buf.validate.field).string.max_len = 50];
}

message CreateResponse {
  User  user = 1;
}

message GetByIdRequest {
  int64 id = 1 [(buf.validate.field).int64.gt = 0];
}

message GetByIdResponse {
  User  user = 1;
}

message UpdateRequest {
  int64   id = 1 [(buf.validate.field).int64.gt = 0];
  string  username = 2 [(buf.validate.field).string.min_len = 1, (buf.validate.field).string.max_len = 50];
  string  email = 3 [(buf.validate.field).cel = {
    id: "valid_email",
    message: "email must be a valid email",
    expression: "this.isEmail()"
  }];
  string  password = 4 [(buf.validate.field).string.min_len = 1, (buf.validate.field).string.max_len = 50];
}

message UpdateResponse {
  User  user = 1;
}

message DeleteRequest {
  int64 id = 1 [(buf.validate.field).int64.gt = 0];
}

message DeleteResponse {
  bool  success = 1;
}
