syntax = "proto3";

package channels.v1;

import "buf/validate/validate.proto";
import "users_service/users/v1/users.proto";
import "guilds_service/roles/v1/roles.proto";
import "channels_service/embeds/v1/embeds.proto";

service ChannelsService {
  rpc Create (CreateRequest) returns (CreateResponse) {}
  rpc GetById (GetByIdRequest) returns (GetByIdResponse) {}
  rpc Update (UpdateRequest) returns (UpdateResponse) {}
  rpc Delete (DeleteRequest) returns (DeleteResponse) {}
  rpc GetByGuildID (GetByGuildIDRequest) returns (GetByGuildIDResponse) {}
  rpc GetChannelMessages (GetChannelMessagesRequest) returns (GetChannelMessagesResponse) {}
  rpc GetChannelMessage (GetChannelMessageRequest) returns (GetChannelMessageResponse) {}
  rpc CreateMessage (CreateMessageRequest) returns (CreateMessageResponse) {}
  rpc UpdateMessage (UpdateMessageRequest) returns (UpdateMessageResponse) {}
  rpc DeleteMessage (DeleteMessageRequest) returns (DeleteMessageResponse) {}
  rpc BulkDeleteMessages (BulkDeleteMessagesRequest) returns (BulkDeleteMessagesResponse) {}
  rpc EditChannelPermissions (EditChannelPermissionsRequest) returns (EditChannelPermissionsResponse) {}
  rpc DeleteChannelPermission (DeleteChannelPermissionRequest) returns (DeleteChannelPermissionResponse) {}
  rpc TriggerTypingIndicator (TriggerTypingIndicatorRequest) returns (TriggerTypingIndicatorResponse) {}
  rpc GetPinnedMessages (GetPinnedMessagesRequest) returns (GetPinnedMessagesResponse) {}
  rpc AddPinnedMessage (AddPinnedMessageRequest) returns (AddPinnedMessageResponse) {}
  rpc DeletePinnedMessage (DeletePinnedMessageRequest) returns (DeletePinnedMessageResponse) {}
  rpc GroupDMAddRecipient (GroupDMAddRecipientRequest) returns (GroupDMAddRecipientResponse) {}
  rpc GroupDMRemoveRecipient (GroupDMRemoveRecipientRequest) returns (GroupDMRemoveRecipientResponse) {}
}

enum ChannelType {
  GUILD_TEXT = 0;
  DM = 1;
  GUILD_VOICE = 2;
  GROUP_DM = 3;
  GUILD_CATEGORY = 4;
}

enum MessageType {
  DEFAULT = 0;
  RECIPIENT_ADD = 1;
  RECIPIENT_REMOVE = 2;
  CALL = 3;
  CHANNEL_NAME_CHANGE = 4;
  CHANNEL_ICON_CHANGE = 5;
  CHANNEL_PINNED_MESSAGE = 6;
  USER_JOIN = 7;
}

message Channel {
  string          id = 1;
  string          name = 2;
  ChannelType     type = 3;
  string          guild_id = 4;
  int32           position = 5;
  string          topic = 6;
  string          icon = 7;
  int32           user_limit = 8;
  repeated string  recipients = 9;
  string          owner_id = 10;
  string          parent_id = 11;
  string          permissions = 12;
  string          last_message_id = 13;
  bool            is_nsfw = 14;
  bool            is_voice = 15;
  int64           created_at = 16;
  int64           updated_at = 17;
}

message ChannelMention {
  string id = 1;
  string name = 2;
  ChannelType type = 3;
  string guild_id = 4;
}

message Attachment {
  string id = 1;
  string filename = 2;
  string description = 3 [(buf.validate.field) = {
    string: {
      max_len: 1024,
    }
    ignore_empty: true,
  }];
  string content_type = 4 [(buf.validate.field) = {
    string: {
      max_len: 100,
    }
    ignore_empty: true,
  }];
  int64 size = 5 [(buf.validate.field).int64.gt = 0];
  string url = 6;
  string proxy_url = 7;
  int64 height = 8;
  int64 width = 9;
}

message Reaction {
  int32 count = 1;
  bool me = 3;
//  TODO add emoji
}

message Message {
  string id = 1;
  string channel_id = 2;
  users.v1.User author = 3;
  string content = 4;
  int64 timestamp = 5;
  int64 edited_timestamp = 6;
  bool mention_everyone = 7;
  repeated users.v1.User mentions = 8;
  repeated roles.v1.Role mention_roles = 9;
  repeated ChannelMention mention_channels = 10;
  repeated Attachment attachments = 11;
  repeated embeds.v1.Embed embeds = 12;
  repeated Reaction reactions = 13;
  int64 nonce = 14;
  bool pinned = 15;
  MessageType type = 16;
}

message ChannelPosition {
  string id = 1;
  int32 position = 2;
  bool  lock_permissions = 3;
  string parent_id = 4;
}

message CreateRequest {
  string  name = 1 [(buf.validate.field).string = {
    min_len: 2,
    max_len: 100,
  }];
  string   owner_id = 3 [(buf.validate.field) = {
    string: {
      pattern: "^[0-9]+$",
    }
  }];
  string   guild_id = 4 [(buf.validate.field) = {
    string: {
      pattern: "^[0-9]+$",
    }
  }];
  ChannelType type = 5 [(buf.validate.field) = {
    enum: {
      defined_only: true,
    }
  }];
  string  topic = 6 [(buf.validate.field) = {
    string: {
      max_len: 1024,
    }
    ignore_empty: true,
  }];
  int32   position = 7 [(buf.validate.field) = {
    int32: {
      gte: 0,
    }
    ignore_empty: true,
  }];
  bool    is_nsfw = 8 [(buf.validate.field) = {
    bool: {}
    ignore_empty: true,
  }];
  bool    is_voice = 9 [(buf.validate.field) = {
    bool: {}
    ignore_empty: true,
  }];
  string   parent_id = 10 [(buf.validate.field) = {
    string: {
      pattern: "^[0-9]+$",
    }
    ignore_empty: true,
  }];
  int32   user_limit = 11 [(buf.validate.field) = {
    int32: {
      gte: 1,
      lte: 99,
    }
    ignore_empty: true,
  }];
  repeated string recipients = 12 [(buf.validate.field) = {
    repeated: {
      unique: true,
      max_items: 100,
      items: {
        string: {
          pattern: "^[0-9]+$",
        }
      }
    }
    ignore_empty: true,
  }];
}

message CreateResponse {
  Channel channel = 1;
}

message GetByIdRequest {
  string id = 1 [(buf.validate.field) = {
    string: {
      pattern: "^[0-9]+$",
    }
  }];
}

message GetByIdResponse {
  Channel channel = 1;
}

message UpdateRequest {
  string   id = 2 [(buf.validate.field) = {
    string: {
      pattern: "^[0-9]+$",
    }
  }];
  string  name = 3 [(buf.validate.field) = {
    string: {
      min_len: 2,
      max_len: 100,
    }
  }];
  ChannelType type = 4 [(buf.validate.field) = {
    enum: {
      defined_only: true,
    }
  }];
  string  topic = 5 [(buf.validate.field) = {
    string: {
      max_len: 1024,
    }
    ignore_empty: true,
  }];
  int32   position = 6 [(buf.validate.field) = {
    int32: {
      gte: 0,
    }
    ignore_empty: true,
  }];
  bool    is_nsfw = 7 [(buf.validate.field) = {
    bool: {}
    ignore_empty: true,
  }];
  string   parent_id = 9 [(buf.validate.field) = {
    string: {
      pattern: "^[0-9]+$",
    }
    ignore_empty: true,
  }];
  int32   user_limit = 10 [(buf.validate.field) = {
    int32: {
      gte: 1,
      lte: 99,
    }
    ignore_empty: true,
  }];
  repeated string recipients = 11 [(buf.validate.field) = {
    repeated: {
      unique: true,
      max_items: 100,
      items: {
        string: {
          pattern: "^[0-9]+$",
        }
      }
    }
    ignore_empty: true,
  }];
  string permissions = 12 [(buf.validate.field) = {
    string: {
      max_len: 1024,
    }
    ignore_empty: true,
  }];
  string   last_message_id = 13 [(buf.validate.field) = {
    string: {
      pattern: "^[0-9]+$",
    }
    ignore_empty: true,
  }];
  string  icon = 14 [(buf.validate.field) = {
    string: {
      pattern: "^data:image/(jpeg|png);base64,[A-Za-z0-9+/=]+$",
    }
    ignore_empty: true,
  }]; // TODO limit size
}

message UpdateResponse {
  Channel channel = 1;
}

message DeleteRequest {
  string id = 1 [(buf.validate.field) = {
    string: {
      pattern: "^[0-9]+$",
    }
  }];
}

message DeleteResponse {
  bool  success = 1;
}

message GetByGuildIDRequest {
  string guild_id = 1 [(buf.validate.field) = {
    string: {
      pattern: "^[0-9]+$",
    }
  }];
}

message GetByGuildIDResponse {
  repeated Channel channels = 1;
}

message GetChannelMessagesRequest {
  string channel_id = 1 [(buf.validate.field) = {
    string: {
      pattern: "^[0-9]+$",
    }
  }];
  int32 limit = 2 [(buf.validate.field) = {
    int32: {
      gte: 1,
      lte: 100,
    }
  }];
  string before = 3 [(buf.validate.field) = {
    string: {
      pattern: "^[0-9]+$",
    }
  }];
  string after = 4 [(buf.validate.field) = {
    string: {
      pattern: "^[0-9]+$",
    }
  }];
  string around = 5 [(buf.validate.field) = {
    string: {
      pattern: "^[0-9]+$",
    }
  }];
}

message GetChannelMessagesResponse {
  repeated Message messages = 1;
}

message GetChannelMessageRequest {
  string channel_id = 1 [(buf.validate.field) = {
    string: {
      pattern: "^[0-9]+$",
    }
  }];
  string message_id = 2 [(buf.validate.field) = {
    string: {
      pattern: "^[0-9]+$",
    }
  }];
}

message GetChannelMessageResponse {
  Message message = 1;
}

message CreateMessageRequest {
  string channel_id = 1 [(buf.validate.field) = {
    string: {
      pattern: "^[0-9]+$",
    }
  }];
  string author_id = 2 [(buf.validate.field) = {
    string: {
      pattern: "^[0-9]+$",
    }
  }];
  string content = 3 [(buf.validate.field) = {
    string: {
      max_len: 2000,
    },
    ignore_empty: true,
  }];
  int64 nonce = 4 [(buf.validate.field).int64.gt = 0];
  repeated embeds.v1.Embed embeds = 5 [(buf.validate.field) = {
    repeated: {
      max_items: 10,
    },
    ignore_empty: true,
  }];
  ChannelType type = 6 [(buf.validate.field) = {
    enum: {
      defined_only: true,
    }
  }];

  // TODO add multipart form data for attachments
  // TODO check if at least one of content or embeds is present
}

message CreateMessageResponse {
  Message message = 1;
}

message UpdateMessageRequest {
  string channel_id = 1 [(buf.validate.field) = {
    string: {
      pattern: "^[0-9]+$",
    }
  }];
  string message_id = 2 [(buf.validate.field) = {
    string: {
      pattern: "^[0-9]+$",
    }
  }];
  string content = 3 [(buf.validate.field) = {
    string: {
      max_len: 2000,
    }
  }];
  int64 nonce = 4 [(buf.validate.field).int64.gt = 0];
  repeated embeds.v1.Embed embeds = 5;
  // TODO add multipart form data for attachments
}

message UpdateMessageResponse {
  Message message = 1;
}

message DeleteMessageRequest {
  string channel_id = 1 [(buf.validate.field) = {
    string: {
      pattern: "^[0-9]+$",
    }
  }];
  string message_id = 2 [(buf.validate.field) = {
    string: {
      pattern: "^[0-9]+$",
    }
  }];
}

message DeleteMessageResponse {
  bool success = 1;
}

message BulkDeleteMessagesRequest {
  string channel_id = 1 [(buf.validate.field) = {
    string: {
      pattern: "^[0-9]+$",
    }
  }];
  repeated string messages = 2 [(buf.validate.field) = {
    repeated: {
      unique: true,
      max_items: 100,
      items: {
        string: {
          pattern: "^[0-9]+$",
        }
      }
    }
  }];
}

message BulkDeleteMessagesResponse {
  bool success = 1;
}

message EditChannelPermissionsRequest {
  string channel_id = 1 [(buf.validate.field) = {
    string: {
      pattern: "^[0-9]+$",
    }
  }];
  string overwrite_id = 2 [(buf.validate.field) = {
    string: {
      pattern: "^[0-9]+$",
    }
  }];
  int64 allow = 3 [(buf.validate.field).int64.gt = 0];
  int64 deny = 4 [(buf.validate.field).int64.gt = 0];
  int32 type = 5 [(buf.validate.field).int32 = {
    gte: 0,
    lte: 1,
  }];
}

message EditChannelPermissionsResponse {
  bool success = 1;
}

message DeleteChannelPermissionRequest {
  string channel_id = 1 [(buf.validate.field) = {
    string: {
      pattern: "^[0-9]+$",
    }
  }];
  string overwrite_id = 2 [(buf.validate.field) = {
    string: {
      pattern: "^[0-9]+$",
    }
  }];
}

message DeleteChannelPermissionResponse {
  bool success = 1;
}

message TriggerTypingIndicatorRequest {
  string channel_id = 1 [(buf.validate.field) = {
    string: {
      pattern: "^[0-9]+$",
    }
  }];
}

message TriggerTypingIndicatorResponse {
  bool success = 1;
}

message GetPinnedMessagesRequest {
  string channel_id = 1 [(buf.validate.field) = {
    string: {
      pattern: "^[0-9]+$",
    }
  }];
}

message GetPinnedMessagesResponse {
  repeated Message messages = 1;
}

message AddPinnedMessageRequest {
  string channel_id = 1 [(buf.validate.field) = {
    string: {
      pattern: "^[0-9]+$",
    }
  }];
  string message_id = 2 [(buf.validate.field) = {
    string: {
      pattern: "^[0-9]+$",
    }
  }];
}

message AddPinnedMessageResponse {
  bool success = 1;
}

message DeletePinnedMessageRequest {
  string channel_id = 1 [(buf.validate.field) = {
    string: {
      pattern: "^[0-9]+$",
    }
  }];
  string message_id = 2 [(buf.validate.field) = {
    string: {
      pattern: "^[0-9]+$",
    }
  }];
}

message DeletePinnedMessageResponse {
  bool success = 1;
}

message GroupDMAddRecipientRequest {
  string channel_id = 1 [(buf.validate.field) = {
    string: {
      pattern: "^[0-9]+$",
    }
  }];
  string user_id = 2 [(buf.validate.field) = {
    string: {
      pattern: "^[0-9]+$",
    }
  }];
  string access_token = 3 [(buf.validate.field) = {
    string: {
      min_len: 1,
    }
  }];
  string nick = 4 [(buf.validate.field) = {
    string: {
      max_len: 32,
    }
    ignore_empty: true,
  }];
}

message GroupDMAddRecipientResponse {
  bool success = 1;
}

message GroupDMRemoveRecipientRequest {
  string channel_id = 1 [(buf.validate.field) = {
    string: {
      pattern: "^[0-9]+$",
    }
  }];
  string user_id = 2 [(buf.validate.field) = {
    string: {
      pattern: "^[0-9]+$",
    }
  }];
}

message GroupDMRemoveRecipientResponse {
  bool success = 1;
}
